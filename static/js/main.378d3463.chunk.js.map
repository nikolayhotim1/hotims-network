{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/authReducer.ts","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","assets/images/hotims-network.jpg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.ts","redux/sidebarReducer.ts","redux/reduxStore.ts","App.jsx","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profileReducer.ts","redux/dialogsReducer.ts","utils/helpers/objectHelper.js","redux/usersReducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","api/api.ts"],"names":["module","exports","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","id","email","login","isAuth","isFetching","captchaURL","setAuthUserData","type","payload","getCaptchaURLSuccess","getAuthUserData","dispatch","a","authAPI","data","resultCode","ResultCodesEnum","Success","password","rememberMe","captcha","ResultCodeForCaptchaEnum","CaptchaIsRequired","getCaptchaURL","message","messages","length","stopSubmit","_error","securityAPI","url","logout","authReduser","state","action","Navbar","className","style","navbar","navItem","isActive","active","to","News","news_wrapper","Music","musik_wrapper","Settings","settings_wrapper","Header","props","header","src","hotimsNetwork","alt","login_block","onClick","HeaderContainer","this","React","Component","connect","auth","INITIALIZED_SUCCESS","initialized","appReduser","sidebarReduser","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","sidebarReducer","usersPage","usersReducer","authReducer","form","formReducer","app","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileContainer","lazy","DialogsContainer","UsersConatainer","Login","App","catchAllUnhandledErrors","reason","promise","console","log","initializeApp","addEventListener","removeEventListener","fallback","Preloader","path","element","pageTitle","AppContainer","Promise","all","then","MainApp","ReactDOM","render","document","getElementById","preloader","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","DELETE_POST","posts","likesCount","profile","status","newPostText","addPost","setUserStatus","getUserProfile","userId","profileAPI","getUserStatus","getUpdateStatus","savePhoto","file","photos","saveProfile","getState","reject","newPost","filter","p","postId","SEND_MESSAGE","dialogs","name","sendMessageActionCreator","newMessageText","dialogsReduser","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","followingInProgress","actions","requestUsers","page","usersAPI","getUsers","totalCount","_followUnfollowFlow","apiMethod","actionCreator","follow","getNewFollowedUser","bind","unfollow","getNewUnfollowedUser","followed","instance","axios","create","withCredentials","baseURL","headers","get","response","post","delete","put","formData","FormData","append"],"mappings":"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","file":"static/js/main.378d3463.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1Xf1_\",\"active\":\"Navbar_active__Gzitz\"};","import { ResultCodesEnum, ResultCodeForCaptchaEnum } from './../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { authAPI, securityAPI } from '../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'authReduser/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'authReduser/GET_CAPTCHA_URL_SUCCESS';\r\nconst initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    captchaURL: null as string | null\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA,\r\n    payload: {\r\n        id: number | null,\r\n        email: string | null,\r\n        login: string | null,\r\n        isAuth: boolean\r\n    }\r\n};\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n): SetAuthUserDataType => ({ type: SET_AUTH_USER_DATA, payload: { id, email, login, isAuth } });\r\ntype GetCaptchaURLSuccessType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: { captchaURL: string }\r\n};\r\nexport const getCaptchaURLSuccess = (captchaURL: string): GetCaptchaURLSuccessType => (\r\n    { type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaURL } }\r\n);\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.getAuthUserData();\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            const { id, email, login } = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    };\r\n};\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null) => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.login(email, password, rememberMe, captcha);\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            if (data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(getCaptchaURL());\r\n            }\r\n            const message = data.messages.length > 0 ? data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', { _error: message }));\r\n        }\r\n    };\r\n};\r\nexport const getCaptchaURL = () => {\r\n    return async (dispatch: any) => {\r\n        const data = await securityAPI.getCaptchaURL();\r\n        const captchaURL = data.url;\r\n        dispatch(getCaptchaURLSuccess(captchaURL));\r\n    };\r\n};\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.logout();\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    };\r\n};\r\nexport default authReduser;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/users'>Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/news'>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/settings'>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={style.news_wrapper}>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={style.musik_wrapper}>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={style.settings_wrapper}>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/hotims-network.a9103588.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\nimport hotimsNetwork from './../../assets/images/hotims-network.jpg';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img\r\n                src={hotimsNetwork}\r\n                alt='Hotims Network'\r\n            />\r\n            <div className={style.login_block}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        {props.login} <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import { getAuthUserData } from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'appReduser/INITIALIZED_SUCCESS';\r\nconst initialState = {\r\n    initialized: false\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n};\r\nexport const initializedSuccess = (): InitializedSuccessType => (\r\n    { type: INITIALIZED_SUCCESS }\r\n);\r\nexport const initializeApp = () => {\r\n    return (dispatch: any) => {\r\n        const promise = dispatch(getAuthUserData());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n    };\r\n};\r\nexport default appReduser;","const initialState = {};\r\ntype InitialStateType = typeof initialState;\r\nconst sidebarReduser = (state = initialState): InitialStateType => {\r\n    return state;\r\n};\r\nexport default sidebarReduser;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>;\r\ntype RootReducerType = typeof rootReducer;\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppSateType = ReturnType<RootReducerType>;\r\nexport default store;","import React, { Component, Suspense } from 'react';\r\nimport { Route, Routes, Navigate } from 'react-router';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/reduxStore';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersConatainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        console.log(`Some error occured: ${reason}, ${promise}`);\r\n    };\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<Preloader />}>\r\n                        <Routes>\r\n                            <Route path='/profile' element={<ProfileContainer />}>\r\n                                <Route path='/profile/:userId' element={<ProfileContainer />} />\r\n                            </Route>\r\n                            <Route path='/dialogs' element={<DialogsContainer />} />\r\n                            <Route path='/users' element={<UsersConatainer pageTitle={'Samurai'} />} />\r\n                            <Route path='/login' element={<Login />} />\r\n                            <Route path='/news' element={<News />} />\r\n                            <Route path='/music' element={<Music />} />\r\n                            <Route path='/settings' element={<Settings />} />\r\n                            <Route path='/' element={<Navigate to='/profile' />} />\r\n                            <Route path='/*' element={<div>404 NOT FOUND</div>} />\r\n                        </Routes>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialized: state.app.initialized });\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\nconst MainApp = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));","export default __webpack_public_path__ + \"static/media/preloader.86e365cf.svg\";","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt='Preloader' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ekwU\",\"login_block\":\"Header_login_block__3xb1L\"};","import { PhotosType, PostType, ProfileType } from '../types/types';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'profileReducer/ADD-POST';\r\nconst SET_USER_PROFILE = 'profileReducer/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profileReducer/SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profileReducer/SAVE_PHOTO_SUCCESS';\r\nconst DELETE_POST = 'profileReducer/DELETE_POST';\r\nconst initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi! How are you?', likesCount: 20 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 15 },\r\n        { id: 3, message: 'Forza Juve!', likesCount: 30 },\r\n        { id: 4, message: 'Nikolay is number 1!', likesCount: 35 }\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [\r\n                    ...state.posts,\r\n                    newPost\r\n                ]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos } as ProfileType\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype AddPostType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n};\r\nexport const addPost = (newPostText: string): AddPostType => (\r\n    { type: ADD_POST, newPostText }\r\n);\r\ntype DeletePostType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n};\r\nexport const deletePost = (postId: number): DeletePostType => (\r\n    { type: DELETE_POST, postId }\r\n);\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n};\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => (\r\n    { type: SET_USER_PROFILE, profile }\r\n);\r\ntype SetUserStatusType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n};\r\nexport const setUserStatus = (status: string): SetUserStatusType => (\r\n    { type: SET_USER_STATUS, status }\r\n);\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n};\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => (\r\n    { type: SAVE_PHOTO_SUCCESS, photos }\r\n);\r\nexport const getUserProfile = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(data));\r\n    };\r\n};\r\nexport const getUserStatus = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.getUserStatus(userId);\r\n        dispatch(setUserStatus(data));\r\n    };\r\n};\r\nexport const getUpdateStatus = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            const data = await profileAPI.getUpdateStatus(status);\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        } catch (error: any) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n};\r\nexport const savePhoto = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.savePhoto(file);\r\n        if (data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(data.data.photos));\r\n        }\r\n    };\r\n};\r\nexport const saveProfile = (profile: ProfileType) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const userId = getState().auth.id;\r\n        const data = await profileAPI.saveProfile(profile);\r\n        if (data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            dispatch(stopSubmit('editProfile', { _error: data.messages[0] }));\r\n            return Promise.reject(data.messages[0]);\r\n        }\r\n    };\r\n};\r\nexport default profileReducer;","const SEND_MESSAGE = 'dialogsReduser/SEND-MESSAGE';\r\ntype DialogType = {\r\n    id: number,\r\n    name: string\r\n};\r\ntype MessageType = {\r\n    id: number,\r\n    message: string\r\n};\r\nconst initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Andrey' },\r\n        { id: 2, name: 'Denis' },\r\n        { id: 3, name: 'Katya' },\r\n        { id: 4, name: 'Mum' },\r\n        { id: 5, name: 'Dad' }\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Yo!' },\r\n        { id: 4, message: 'Yo!' },\r\n        { id: 5, message: 'Yo!' }\r\n    ] as Array<MessageType>\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst dialogsReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            const newMessage = {\r\n                id: 6,\r\n                message: action.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    newMessage\r\n                ]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype SendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageText: string\r\n};\r\nexport const sendMessageActionCreator = (newMessageText: string): SendMessageActionCreatorType => (\r\n    { type: SEND_MESSAGE, newMessageText }\r\n);\r\nexport default dialogsReduser;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    });\r\n};","import { AppSateType, InferActionsTypes } from './reduxStore';\r\nimport { UserType } from '../types/types';\r\nimport { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/helpers/objectHelper';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n            };\r\n        }\r\n        case 'UNFOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n            };\r\n        }\r\n        case 'SET_USERS': {\r\n            return { ...state, users: action.users };\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\nexport const actions = {\r\n    followSuccess: (userId: number) => (\r\n        { type: 'FOLLOW', userId } as const\r\n    ),\r\n    unfollowSuccess: (userId: number) => (\r\n        { type: 'UNFOLLOW', userId } as const\r\n    ),\r\n    setUsers: (users: Array<UserType>) => (\r\n        { type: 'SET_USERS', users } as const\r\n    ),\r\n    setCurrentPage: (currentPage: number) => (\r\n        { type: 'SET_CURRENT_PAGE', currentPage } as const\r\n    ),\r\n    setTotalUsersCount: (totalUsersCount: number) => (\r\n        { type: 'SET_TOTAL_USERS_COUNT', totalUsersCount } as const\r\n    ),\r\n    toggleIsFetching: (isFetching: boolean) => (\r\n        { type: 'TOGGLE_IS_FETCHING', isFetching } as const\r\n    ),\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => (\r\n        { type: 'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const\r\n    )\r\n};\r\ntype ThunkType = ThunkAction<Promise<void>, AppSateType, unknown, ActionsTypes>;\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(page));\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    };\r\n};\r\ntype DispatchType = Dispatch<ActionsTypes>;\r\nconst _followUnfollowFlow = async (\r\n    dispatch: DispatchType,\r\n    userId: number,\r\n    apiMethod: any,\r\n    actionCreator: (userId: number) => ActionsTypes\r\n) => {\r\n    dispatch(actions.toggleIsFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleIsFollowingProgress(false, userId));\r\n};\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.getNewFollowedUser.bind(userId), actions.followSuccess);\r\n    };\r\n};\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.getNewUnfollowedUser.bind(userId), actions.unfollowSuccess);\r\n    };\r\n};\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news_wrapper\":\"News_news_wrapper__2CVF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musik_wrapper\":\"Music_musik_wrapper__Xz0qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_wrapper\":\"Settings_settings_wrapper__3AP6z\"};","import { ProfileType } from './../types/types';\r\nimport axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '7d7c0cc8-9365-47ef-8d77-ea42e5daa598'\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    async getUsers(currentPage: number, pageSize: number) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n        return response.data;\r\n    },\r\n    async getNewFollowedUser(userId: number) {\r\n        const response = await instance.post(`follow/${userId}`, {});\r\n        return response.data;\r\n    },\r\n    async getNewUnfollowedUser(userId: number) {\r\n        const response = await instance.delete(`follow/${userId}`);\r\n        return response.data;\r\n    }\r\n};\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n};\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n};\r\ntype GetAuthUserDataType = {\r\n    data: {\r\n        id: number,\r\n        email: string,\r\n        login: string\r\n    },\r\n    resultCode: ResultCodesEnum,\r\n    messages: Array<string>\r\n};\r\ntype LoginType = {\r\n    data: {\r\n        userId: number\r\n    },\r\n    resultCode: ResultCodesEnum | ResultCodeForCaptchaEnum,\r\n    messages: Array<string>\r\n};\r\nexport const authAPI = {\r\n    async getAuthUserData() {\r\n        const response = await instance.get<GetAuthUserDataType>(`auth/me`);\r\n        return response.data;\r\n    },\r\n    async login(email: string | null, password: string | null, rememberMe = false, captcha: string | null = null) {\r\n        const response = await instance.post<LoginType>(`auth/login`, { email, password, rememberMe, captcha });\r\n        return response.data;\r\n    },\r\n    async logout() {\r\n        const response = await instance.delete(`auth/login`);\r\n        return response.data;\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    async getCaptchaURL() {\r\n        const response = await instance.get(`security/get-captcha-url`);\r\n        return response.data;\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    async getUserProfile(userId: number) {\r\n        const response = await instance.get(`profile/${userId}`);\r\n        return response.data;\r\n    },\r\n    async getUserStatus(userId: number) {\r\n        const response = await instance.get(`profile/status/${userId}`);\r\n        return response.data;\r\n    },\r\n    async getUpdateStatus(status: string) {\r\n        const response = await instance.put(`profile/status`, { status: status });\r\n        return response.data;\r\n    },\r\n    async savePhoto(file: any) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        const response = await instance.put(\r\n            `profile/photo`,\r\n            formData,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n        );\r\n        return response.data;\r\n    },\r\n    async saveProfile(profile: ProfileType) {\r\n        const response = await instance.put(`profile`, profile);\r\n        return response.data;\r\n    }\r\n};"],"sourceRoot":""}