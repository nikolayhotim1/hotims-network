{"version":3,"sources":["pages/ChatPage/ChatPage.module.css","pages/ChatPage/ChatPage.tsx"],"names":["module","exports","ws","WebSocket","Message","message","className","style","src","photo","alt","userName","Messages","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","map","m","i","AddMessageForm","setMessage","onChange","currentTarget","value","type","onClick","send","Chat","ChatPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,oICE5DC,EAAK,IAAIC,UAAU,gEAOnBC,EAA4C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpD,OACC,gCACC,qBAAKC,UAAWC,IAAMF,QAASG,IAAKH,EAAQI,MAAOC,IAAKL,EAAQM,WADjE,IAC8E,4BAAIN,EAAQM,WACzF,uBACCN,EAAQA,QACT,2BAIGO,EAAe,WACpB,MAAgCC,mBAA4B,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OAPAC,qBAAU,WACTd,EAAGe,iBAAiB,WAAW,SAAAC,GAC9B,IAAMC,EAAcC,KAAKC,MAAMH,EAAEI,MACjCP,GAAY,SAAAQ,GAAY,4BAAQA,GAAR,YAAyBJ,YAGhD,IAEF,qBAAKb,UAAWC,IAAMO,SAAtB,SACEA,EAASU,KAAI,SAACC,EAAGC,GAAJ,OACb,cAACtB,EAAD,CAASC,QAASoB,GAAQC,SAKxBC,EAAqB,WAC1B,MAA8Bd,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBuB,EAAhB,KAQA,OACC,8BACC,kCACC,0BAAUC,SAAU,SAAAX,GAAC,OAAIU,EAAWV,EAAEY,cAAcC,QAAQA,MAAO1B,IACnE,uBACA,wBAAQ2B,KAAK,SAASC,QAZL,WACd5B,IAGLH,EAAGgC,KAAK7B,GACRuB,EAAW,MAOT,wBAOEO,EAAW,WAChB,OACC,gCACC,cAACvB,EAAD,IACA,cAACe,EAAD,QAIUS,EAAe,WAC3B,OAAO,cAACD,EAAD","file":"static/js/6.819732da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"ChatPage_messages__16n5R\",\"message\":\"ChatPage_message__1-f9v\"};","import { FC, useEffect, useState } from 'react'\r\nimport style from './ChatPage.module.css'\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\nexport type ChatMessageType = {\r\n\tmessage: string\r\n\tphoto: string\r\n\tuserId: number\r\n\tuserName: string\r\n}\r\nconst Message: FC<{ message: ChatMessageType }> = ({ message }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img className={style.message} src={message.photo} alt={message.userName} /> <b>{message.userName}</b>\r\n\t\t\t<br />\r\n\t\t\t{message.message}\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\nconst Messages: FC = () => {\r\n\tconst [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\tuseEffect(() => {\r\n\t\tws.addEventListener('message', e => {\r\n\t\t\tconst newMessages = JSON.parse(e.data)\r\n\t\t\tsetMessages(prevMessages => [...prevMessages, ...newMessages])\r\n\t\t})\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\treturn (\r\n\t\t<div className={style.messages}>\r\n\t\t\t{messages.map((m, i) => (\r\n\t\t\t\t<Message message={m} key={i} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nconst AddMessageForm: FC = () => {\r\n\tconst [message, setMessage] = useState('')\r\n\tconst sendMessage = () => {\r\n\t\tif (!message) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tws.send(message)\r\n\t\tsetMessage('')\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label>\r\n\t\t\t\t<textarea onChange={e => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n\t\t\t\t<br />\r\n\t\t\t\t<button type='submit' onClick={sendMessage}>\r\n\t\t\t\t\tSend\r\n\t\t\t\t</button>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst Chat: FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Messages />\r\n\t\t\t<AddMessageForm />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport const ChatPage: FC = () => {\r\n\treturn <Chat />\r\n}\r\n"],"sourceRoot":""}