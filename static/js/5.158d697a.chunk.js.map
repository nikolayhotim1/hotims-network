{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormsControl","meta","touched","error","children","hasError","className","style","formControl","Textarea","input","props","Input","createField","component","name","placeholder","validators","text","validate","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirectComponent","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialog","active","Message","message","maxLength50","DialogsForm","new_message","onSubmit","handleSubmit","Field","DialogsReduxForm","reduxForm","form","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogs_items","values","sendMessage","newMessageText","compose","dispatch","sendMessageActionCreator"],"mappings":"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","file":"static/js/5.158d697a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__P0TRj\",\"error\":\"FormsControls_error__28RCb\",\"formSummaryError\":\"FormsControls_formSummaryError__1AxrH\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormsControls.module.css';\r\n\r\nconst FormsControl = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({ input, ...props }) => {\r\n    return (\r\n        <FormsControl {...props}>\r\n            <textarea {...input} {...props} />\r\n        </FormsControl>\r\n    );\r\n};\r\n\r\nexport const Input = ({ input, ...props }) => {\r\n    return (\r\n        <FormsControl {...props}>\r\n            <input {...input} {...props} />\r\n        </FormsControl>\r\n    );\r\n};\r\n\r\nexport const createField = (component, name, placeholder, validators, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                component={component}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props}\r\n            />{text}\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2mHsb\",\"dialogs_items\":\"Dialogs_dialogs_items__QWhev\",\"active\":\"Dialogs_active__2PDu4\",\"dialog\":\"Dialogs_dialog__2zizR\",\"messages\":\"Dialogs_messages__1mP8G\",\"message\":\"Dialogs_message__3ZxvP\",\"new_message\":\"Dialogs_new_message__2yDAo\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={`${style.dialog} ${style.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport { Field } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form\r\n            className={style.new_message}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newMessageText'\r\n                    placeholder='New message'\r\n                    validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DialogsForm;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm } from 'redux-form';\r\nimport DialogsForm from './DialogsForm';\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'dialog' })(DialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(\r\n        d => <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    );\r\n\r\n    let messagesElements = state.messages.map(\r\n        m => <Message message={m.message} key={m.id} />\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n            </div>\r\n\r\n            <DialogsReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirectComponent } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageActionCreator } from '../../redux/dialogsReduser';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText));\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirectComponent\r\n)(Dialogs);"],"sourceRoot":""}