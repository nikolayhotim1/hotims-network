{"version":3,"sources":["components/Login/LoginForm.tsx","components/Login/LoginPage.tsx"],"names":["LoginForm","memo","handleSubmit","error","captchaURL","onSubmit","createField","Input","required","type","src","alt","className","style","formSummaryError","reduxForm","form","LoginPage","useSelector","state","auth","isAuth","dispatch","useDispatch","to","formData","login","email","password","rememberMe","captcha"],"mappings":"+NAgBMA,EAA+EC,gBACpF,YAA0C,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACvB,OACC,uBAAMC,SAAUH,EAAhB,UACEI,YAAqCC,IAAO,QAAS,QAAS,CAACC,MAC/DF,YAAqCC,IAAO,WAAY,WAAY,CAACC,KAAW,CAAEC,KAAM,aACxFH,YAAqCC,IAAO,aAAc,KAAM,GAAI,CAAEE,KAAM,YAAc,eAC1FL,GACA,qCACC,qBAAKM,IAAKN,EAAYO,IAAI,gBACzBL,YAAqCC,IAAO,UAAW,2BAA4B,CAACC,SAGtFL,GAAS,qBAAKS,UAAWC,IAAMC,iBAAtB,SAAyCX,IACnD,8BACC,wBAAQM,KAAK,SAAb,2BAMUM,cAA0C,CAAEC,KAAM,SAAlDD,CAA6Df,G,eC9B/DiB,EAAgBhB,gBAAK,WACjC,IAAMG,EAAac,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKhB,cAC7DiB,EAASH,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKC,UACzDC,EAAWC,cAIjB,OAAIF,EAAe,cAAC,IAAD,CAAUG,GAAG,aAE/B,gCACC,uCACA,cAAC,EAAD,CAAWnB,SAPI,SAACoB,GACjBH,EAASI,YAAMD,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAYJ,EAASK,WAMhD1B,WAAYA","file":"static/js/7.e9db8687.chunk.js","sourcesContent":["import { FC, memo } from 'react'\r\nimport { InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { createField, GetStringKeys, Input } from '../common/FormsControls/FormsControls'\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\ntype PropsType = {\r\n\tcaptchaURL: string | null\r\n}\r\nexport type LoginFormValuesType = {\r\n\temail: string | null\r\n\tpassword: string | null\r\n\trememberMe: boolean\r\n\tcaptcha: string | null\r\n}\r\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType, PropsType> & PropsType> = memo(\r\n\t({ handleSubmit, error, captchaURL }) => {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t{createField<LoginFormValuesTypeKeys>(Input, 'email', 'Email', [required])}\r\n\t\t\t\t{createField<LoginFormValuesTypeKeys>(Input, 'password', 'Password', [required], { type: 'password' })}\r\n\t\t\t\t{createField<LoginFormValuesTypeKeys>(Input, 'rememberMe', null, [], { type: 'checkbox' }, 'Remember me')}\r\n\t\t\t\t{captchaURL && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<img src={captchaURL} alt='captcha-url' />\r\n\t\t\t\t\t\t{createField<LoginFormValuesTypeKeys>(Input, 'captcha', 'Enter symbols from image', [required])}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <div className={style.formSummaryError}>{error}</div>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit'>Login</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n)\r\nexport default reduxForm<LoginFormValuesType, PropsType>({ form: 'login' })(LoginForm)\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport LoginForm, { LoginFormValuesType } from './LoginForm'\r\nimport { login } from '../../redux/authReducer'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { AppStateType } from '../../redux/reduxStore'\r\nimport { FC, memo } from 'react'\r\n\r\nexport const LoginPage: FC = memo(() => {\r\n\tconst captchaURL = useSelector((state: AppStateType) => state.auth.captchaURL)\r\n\tconst isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\tconst dispatch = useDispatch()\r\n\tconst onSubmit = (formData: LoginFormValuesType) => {\r\n\t\tdispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n\t}\r\n\tif (isAuth) return <Navigate to='/profile' />\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<LoginForm onSubmit={onSubmit} captchaURL={captchaURL} />\r\n\t\t</div>\r\n\t)\r\n})\r\n"],"sourceRoot":""}