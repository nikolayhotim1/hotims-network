{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/authReducer.ts","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.ts","redux/sidebarReducer.ts","redux/reduxStore.ts","App.jsx","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profileReducer.ts","redux/dialogsReducer.ts","utils/helpers/objectHelper.js","redux/usersReducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","api/api.ts"],"names":["module","exports","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","id","email","login","isAuth","isFetching","captchaURL","setAuthUserData","type","payload","getCaptchaURLSuccess","getAuthUserData","dispatch","a","authAPI","data","resultCode","ResultCodesEnum","Success","password","rememberMe","captcha","ResultCodeForCaptchaEnum","CaptchaIsRequired","getCaptchaURL","message","messages","length","stopSubmit","_error","securityAPI","url","logout","authReduser","state","action","Navbar","className","style","navbar","navItem","isActive","active","to","News","news_wrapper","Music","musik_wrapper","Settings","settings_wrapper","Header","props","header","src","alt","login_block","onClick","HeaderContainer","this","React","Component","connect","auth","INITIALIZED_SUCCESS","initialized","appReduser","sidebarReduser","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","sidebarReducer","usersPage","usersReducer","authReducer","form","formReducer","app","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileContainer","lazy","DialogsContainer","UsersConatainer","Login","App","catchAllUnhandledErrors","reason","promise","console","log","initializeApp","addEventListener","removeEventListener","fallback","Preloader","path","element","pageTitle","AppContainer","Promise","all","then","MainApp","ReactDOM","render","document","getElementById","preloader","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","DELETE_POST","posts","likesCount","profile","status","newPostText","addPost","setUserStatus","getUserProfile","userId","profileAPI","getUserStatus","getUpdateStatus","savePhoto","file","photos","saveProfile","getState","reject","newPost","filter","p","postId","SEND_MESSAGE","dialogs","name","sendMessageActionCreator","newMessageText","dialogsReduser","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","requestUsers","page","usersAPI","getUsers","totalCount","_followUnfollowFlow","apiMethod","actionCreator","follow","getNewFollowedUser","bind","unfollow","getNewUnfollowedUser","followed","instance","axios","create","withCredentials","baseURL","headers","get","response","post","delete","put","formData","FormData","append"],"mappings":"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","file":"static/js/main.7ced73db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__26rCR\",\"active\":\"Navbar_active__2fWxa\"};","import { ResultCodesEnum, ResultCodeForCaptchaEnum } from './../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { authAPI, securityAPI } from '../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'authReduser/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'authReduser/GET_CAPTCHA_URL_SUCCESS';\r\nconst initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    captchaURL: null as string | null\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA,\r\n    payload: {\r\n        id: number | null,\r\n        email: string | null,\r\n        login: string | null,\r\n        isAuth: boolean\r\n    }\r\n};\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n): SetAuthUserDataType => ({ type: SET_AUTH_USER_DATA, payload: { id, email, login, isAuth } });\r\ntype GetCaptchaURLSuccessType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: { captchaURL: string }\r\n};\r\nexport const getCaptchaURLSuccess = (captchaURL: string): GetCaptchaURLSuccessType => (\r\n    { type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaURL } }\r\n);\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.getAuthUserData();\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            const { id, email, login } = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    };\r\n};\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null) => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.login(email, password, rememberMe, captcha);\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            if (data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(getCaptchaURL());\r\n            }\r\n            const message = data.messages.length > 0 ? data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', { _error: message }));\r\n        }\r\n    };\r\n};\r\nexport const getCaptchaURL = () => {\r\n    return async (dispatch: any) => {\r\n        const data = await securityAPI.getCaptchaURL();\r\n        const captchaURL = data.url;\r\n        dispatch(getCaptchaURLSuccess(captchaURL));\r\n    };\r\n};\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.logout();\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    };\r\n};\r\nexport default authReduser;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/users'>Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/news'>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/settings'>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={style.news_wrapper}>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={style.musik_wrapper}>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={style.settings_wrapper}>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img\r\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Juventus_FC_2017_icon_%28black%29.svg/1200px-Juventus_FC_2017_icon_%28black%29.svg.png'\r\n                alt='Juventus logo'\r\n            />\r\n            <div className={style.login_block}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        {props.login} <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import { getAuthUserData } from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'appReduser/INITIALIZED_SUCCESS';\r\nconst initialState = {\r\n    initialized: false\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n};\r\nexport const initializedSuccess = (): InitializedSuccessType => (\r\n    { type: INITIALIZED_SUCCESS }\r\n);\r\nexport const initializeApp = () => {\r\n    return (dispatch: any) => {\r\n        const promise = dispatch(getAuthUserData());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n    };\r\n};\r\nexport default appReduser;","const initialState = {};\r\ntype InitialStateType = typeof initialState;\r\nconst sidebarReduser = (state = initialState): InitialStateType => {\r\n    return state;\r\n};\r\nexport default sidebarReduser;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\ntype RootReducerType = typeof rootReducer;\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppSateType = ReturnType<RootReducerType>;\r\nexport default store;","import React, { Component, Suspense } from 'react';\r\nimport { Route, Routes, Navigate } from 'react-router';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/reduxStore';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersConatainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        console.log(`Some error occured: ${reason}, ${promise}`);\r\n    };\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<Preloader />}>\r\n                        <Routes>\r\n                            <Route path='/profile' element={<ProfileContainer />}>\r\n                                <Route path='/profile/:userId' element={<ProfileContainer />} />\r\n                            </Route>\r\n                            <Route path='/dialogs' element={<DialogsContainer />} />\r\n                            <Route path='/users' element={<UsersConatainer pageTitle={'Samurai'} />} />\r\n                            <Route path='/login' element={<Login />} />\r\n                            <Route path='/news' element={<News />} />\r\n                            <Route path='/music' element={<Music />} />\r\n                            <Route path='/settings' element={<Settings />} />\r\n                            <Route path='/' element={<Navigate to='/profile' />} />\r\n                            <Route path='/*' element={<div>404 NOT FOUND</div>} />\r\n                        </Routes>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialized: state.app.initialized });\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\nconst MainApp = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));","export default __webpack_public_path__ + \"static/media/preloader.86e365cf.svg\";","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt='Preloader' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3l-DM\",\"login_block\":\"Header_login_block__2wy8A\"};","import { PhotosType, PostType, ProfileType } from '../types/types';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'profileReducer/ADD-POST';\r\nconst SET_USER_PROFILE = 'profileReducer/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profileReducer/SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profileReducer/SAVE_PHOTO_SUCCESS';\r\nconst DELETE_POST = 'profileReducer/DELETE_POST';\r\nconst initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi! How are you?', likesCount: 20 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 15 },\r\n        { id: 3, message: 'Forza Juve!', likesCount: 30 },\r\n        { id: 4, message: 'Nikolay is number 1!', likesCount: 35 }\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [\r\n                    ...state.posts,\r\n                    newPost\r\n                ]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos } as ProfileType\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype AddPostType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n};\r\nexport const addPost = (newPostText: string): AddPostType => (\r\n    { type: ADD_POST, newPostText }\r\n);\r\ntype DeletePostType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n};\r\nexport const deletePost = (postId: number): DeletePostType => (\r\n    { type: DELETE_POST, postId }\r\n);\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n};\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => (\r\n    { type: SET_USER_PROFILE, profile }\r\n);\r\ntype SetUserStatusType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n};\r\nexport const setUserStatus = (status: string): SetUserStatusType => (\r\n    { type: SET_USER_STATUS, status }\r\n);\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n};\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => (\r\n    { type: SAVE_PHOTO_SUCCESS, photos }\r\n);\r\nexport const getUserProfile = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(data));\r\n    };\r\n};\r\nexport const getUserStatus = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.getUserStatus(userId);\r\n        dispatch(setUserStatus(data));\r\n    };\r\n};\r\nexport const getUpdateStatus = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            const data = await profileAPI.getUpdateStatus(status);\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n            }\r\n        } catch (error: any) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n};\r\nexport const savePhoto = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.savePhoto(file);\r\n        if (data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(data.data.photos));\r\n        }\r\n    };\r\n};\r\nexport const saveProfile = (profile: ProfileType) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const userId = getState().auth.id;\r\n        const data = await profileAPI.saveProfile(profile);\r\n        if (data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            dispatch(stopSubmit('editProfile', { _error: data.messages[0] }));\r\n            return Promise.reject(data.messages[0]);\r\n        }\r\n    };\r\n};\r\nexport default profileReducer;","const SEND_MESSAGE = 'dialogsReduser/SEND-MESSAGE';\r\ntype DialogType = {\r\n    id: number,\r\n    name: string\r\n};\r\ntype MessageType = {\r\n    id: number,\r\n    message: string\r\n};\r\nconst initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Andrey' },\r\n        { id: 2, name: 'Denis' },\r\n        { id: 3, name: 'Katya' },\r\n        { id: 4, name: 'Mum' },\r\n        { id: 5, name: 'Dad' }\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Yo!' },\r\n        { id: 4, message: 'Yo!' },\r\n        { id: 5, message: 'Yo!' }\r\n    ] as Array<MessageType>\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst dialogsReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            const newMessage = {\r\n                id: 6,\r\n                message: action.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    newMessage\r\n                ]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype SendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageText: string\r\n};\r\nexport const sendMessageActionCreator = (newMessageText: string): SendMessageActionCreatorType => (\r\n    { type: SEND_MESSAGE, newMessageText }\r\n);\r\nexport default dialogsReduser;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    });\r\n};","import { AppSateType } from './reduxStore';\r\nimport { UserType } from '../types/types';\r\nimport { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/helpers/objectHelper';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst FOLLOW = 'usersReducer/FOLLOW';\r\nconst UNFOLLOW = 'usersReducer/UNFOLLOW';\r\nconst SET_USERS = 'usersReducer/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'usersReducer/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'usersReducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'usersReducer/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'usersReducer/TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype ActionsTypes =\r\n    FollowSuccessType\r\n    | UnfollowSuccessType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountType\r\n    | ToggleIsFetchingType\r\n    | ToggleIsFollowingProgressType;\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n};\r\nexport const followSuccess = (userId: number): FollowSuccessType => (\r\n    { type: FOLLOW, userId }\r\n);\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n};\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => (\r\n    { type: UNFOLLOW, userId }\r\n);\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<UserType>\r\n};\r\nexport const setUsers = (users: Array<UserType>): SetUsersType => (\r\n    { type: SET_USERS, users }\r\n);\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE,\r\n    currentPage: number\r\n};\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => (\r\n    { type: SET_CURRENT_PAGE, currentPage }\r\n);\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: number\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType => (\r\n    { type: SET_TOTAL_USERS_COUNT, totalUsersCount }\r\n);\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING,\r\n    isFetching: boolean\r\n};\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => (\r\n    { type: TOGGLE_IS_FETCHING, isFetching }\r\n);\r\ntype ToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: boolean,\r\n    userId: number\r\n};\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number): ToggleIsFollowingProgressType => (\r\n    { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId }\r\n);\r\ntype ThunkType = ThunkAction<Promise<void>, AppSateType, unknown, ActionsTypes>;\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    };\r\n};\r\ntype DispatchType = Dispatch<ActionsTypes>;\r\ntype ActionCreatorType = (userId: number) => FollowSuccessType | UnfollowSuccessType;\r\nconst _followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any, actionCreator: ActionCreatorType) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n};\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.getNewFollowedUser.bind(userId), followSuccess);\r\n    };\r\n};\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.getNewUnfollowedUser.bind(userId), unfollowSuccess);\r\n    };\r\n};\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news_wrapper\":\"News_news_wrapper__2GfHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musik_wrapper\":\"Music_musik_wrapper__7c8mI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_wrapper\":\"Settings_settings_wrapper__3aOrU\"};","import { ProfileType } from './../types/types';\r\nimport axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '7d7c0cc8-9365-47ef-8d77-ea42e5daa598'\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    async getUsers(currentPage: number, pageSize: number) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n        return response.data;\r\n    },\r\n    async getNewFollowedUser(userId: number) {\r\n        const response = await instance.post(`follow/${userId}`, {});\r\n        return response.data;\r\n    },\r\n    async getNewUnfollowedUser(userId: number) {\r\n        const response = await instance.delete(`follow/${userId}`);\r\n        return response.data;\r\n    }\r\n};\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n};\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n};\r\ntype GetAuthUserDataType = {\r\n    data: {\r\n        id: number,\r\n        email: string,\r\n        login: string\r\n    },\r\n    resultCode: ResultCodesEnum,\r\n    messages: Array<string>\r\n};\r\ntype LoginType = {\r\n    data: {\r\n        userId: number\r\n    },\r\n    resultCode: ResultCodesEnum | ResultCodeForCaptchaEnum,\r\n    messages: Array<string>\r\n};\r\nexport const authAPI = {\r\n    async getAuthUserData() {\r\n        const response = await instance.get<GetAuthUserDataType>(`auth/me`);\r\n        return response.data;\r\n    },\r\n    async login(email: string | null, password: string | null, rememberMe = false, captcha: string | null = null) {\r\n        const response = await instance.post<LoginType>(`auth/login`, { email, password, rememberMe, captcha });\r\n        return response.data;\r\n    },\r\n    async logout() {\r\n        const response = await instance.delete(`auth/login`);\r\n        return response.data;\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    async getCaptchaURL() {\r\n        const response = await instance.get(`security/get-captcha-url`);\r\n        return response.data;\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    async getUserProfile(userId: number) {\r\n        const response = await instance.get(`profile/${userId}`);\r\n        return response.data;\r\n    },\r\n    async getUserStatus(userId: number) {\r\n        const response = await instance.get(`profile/status/${userId}`);\r\n        return response.data;\r\n    },\r\n    async getUpdateStatus(status: string) {\r\n        const response = await instance.put(`profile/status`, { status: status });\r\n        return response.data;\r\n    },\r\n    async savePhoto(file: any) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        const response = await instance.put(\r\n            `profile/photo`,\r\n            formData,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n        );\r\n        return response.data;\r\n    },\r\n    async saveProfile(profile: ProfileType) {\r\n        const response = await instance.put(`profile`, profile);\r\n        return response.data;\r\n    }\r\n};"],"sourceRoot":""}