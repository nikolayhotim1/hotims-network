{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Dialogs/Dialogs.module.css","hocs/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormsControl","meta","touched","error","children","hasError","className","style","formControl","Textarea","input","props","Input","createField","component","name","placeholder","validators","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirectComponent","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialog","active","Message","message","maxLength50","DialogsForm","new_message","onSubmit","handleSubmit","Field","DialogsReduxForm","reduxForm","form","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogs_items","values","sendMessage","newMessageText","compose","dispatch","sendMessageActionCreator"],"mappings":"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","file":"static/js/5.d8a489d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__80KjQ\",\"error\":\"FormsControls_error__2lhvj\",\"formSummaryError\":\"FormsControls_formSummaryError__1HBrY\"};","import { FieldValidatorType } from '../../../utils/validators/validators';\r\nimport { FC, ReactNode } from 'react';\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\nimport style from './FormsControls.module.css';\r\n\r\ntype FormsControlPropsType = {\r\n    meta: WrappedFieldMetaProps,\r\n    children: ReactNode\r\n};\r\nconst FormsControl: FC<FormsControlPropsType> = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\nexport const Textarea: FC<WrappedFieldProps> = ({ input, ...props }) => {\r\n    return (\r\n        <FormsControl {...props}>\r\n            <textarea {...input} {...props} />\r\n        </FormsControl>\r\n    );\r\n};\r\nexport const Input: FC<WrappedFieldProps> = ({ input, ...props }) => {\r\n    return (\r\n        <FormsControl {...props}>\r\n            <input {...input} {...props} />\r\n        </FormsControl>\r\n    );\r\n};\r\nexport function createField<FormKeysType extends string>(\r\n    component: FC<WrappedFieldProps>,\r\n    name: FormKeysType,\r\n    placeholder: string | null,\r\n    validators: Array<FieldValidatorType>,\r\n    props = {},\r\n    text = ''\r\n) {\r\n    return (\r\n        <div>\r\n            <Field\r\n                component={component}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props}\r\n            />{text}\r\n        </div>\r\n    );\r\n};","export type FieldValidatorType = (value: string) => string | undefined;\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Yd3H\",\"dialog\":\"Dialogs_dialog__2cT5u\",\"message\":\"Dialogs_message__21zVT\",\"dialogs_items\":\"Dialogs_dialogs_items__3rDOT\",\"active\":\"Dialogs_active__2bzvZ\",\"messages\":\"Dialogs_messages__VEn_q\",\"new_message\":\"Dialogs_new_message__3uWWp\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    const path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={`${style.dialog} ${style.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport { Field } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form className={style.new_message} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newMessageText'\r\n                    placeholder='New message'\r\n                    validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DialogsForm;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm } from 'redux-form';\r\nimport DialogsForm from './DialogsForm';\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'dialog' })(DialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n    const state = props.dialogsPage;\r\n    const dialogsElements = state.dialogs.map(\r\n        d => <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    );\r\n    const messagesElements = state.messages.map(\r\n        m => <Message message={m.message} key={m.id} />\r\n    );\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    };\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <DialogsReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirectComponent } from '../../hocs/withAuthRedirect';\r\nimport { sendMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText));\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirectComponent\r\n)(Dialogs);"],"sourceRoot":""}