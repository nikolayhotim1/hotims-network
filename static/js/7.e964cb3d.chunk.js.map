{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Login/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","FormsControl","meta","touched","error","children","hasError","className","style","formControl","Textarea","input","props","Input","createField","component","name","placeholder","validators","text","validate","required","value","maxLengthCreator","maxLength","length","LoginForm","handleSubmit","onSubmit","type","formSummaryError","LoginReduxForm","reduxForm","form","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,4NCGrHC,EAAe,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SACxCC,EAAWH,GAAWC,EAE5B,OACI,sBAAKG,UAAS,UAAKC,IAAMC,YAAX,YAA0BH,EAAWE,IAAMJ,MAAQ,IAAjE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAKnBM,EAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC7C,OACI,cAACX,EAAD,2BAAkBW,GAAlB,aACI,oDAAcD,GAAWC,QAKxBC,EAAQ,SAAC,GAAyB,IAAvBF,EAAsB,EAAtBA,MAAUC,EAAY,iBAC1C,OACI,cAACX,EAAD,2BAAkBW,GAAlB,aACI,iDAAWD,GAAWC,QAKrBE,EAAc,SAACC,EAAWC,EAAMC,EAAaC,GAAuC,IAA3BN,EAA0B,uDAAlB,GAAIO,EAAc,uDAAP,GACrF,OACI,gCACI,cAAC,IAAD,aACIJ,UAAWA,EACXC,KAAMA,EACNC,YAAaA,EACbG,SAAUF,GACNN,IACLO,O,iCC1Cf,oEAAO,IAAME,EAAW,SAACC,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,6GCiBnBE,EAlBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcvB,EAAY,EAAZA,MAC/B,OACI,uBAAMwB,SAAUD,EAAhB,UACKb,YAAYD,IAAO,QAAS,QAAS,CAACQ,MACtCP,YAAYD,IAAO,WAAY,WAAY,CAACQ,KAAW,CAAEQ,KAAM,aAC/Df,YAAYD,IAAO,aAAc,KAAM,GAAI,CAAEgB,KAAM,YAAc,eAEjEzB,GACG,qBAAKG,UAAWC,IAAMsB,iBAAtB,SACK1B,IAET,8BACI,iD,eCVV2B,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,CAA6BN,GAuBrCQ,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EArBD,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,MAKb,OALiC,EAAbF,OAMT,cAAC,IAAD,CAAUG,GAAG,aAIpB,gCACI,uCACA,cAACR,EAAD,CAAgBH,SAXP,SAACY,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.e964cb3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__P0TRj\",\"error\":\"FormsControls_error__28RCb\",\"formSummaryError\":\"FormsControls_formSummaryError__1AxrH\"};","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormsControls.module.css';\r\n\r\nconst FormsControl = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({ input, ...props }) => {\r\n    return (\r\n        <FormsControl {...props}>\r\n            <textarea {...input} {...props} />\r\n        </FormsControl>\r\n    );\r\n};\r\n\r\nexport const Input = ({ input, ...props }) => {\r\n    return (\r\n        <FormsControl {...props}>\r\n            <input {...input} {...props} />\r\n        </FormsControl>\r\n    );\r\n};\r\n\r\nexport const createField = (component, name, placeholder, validators, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                component={component}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props}\r\n            />{text}\r\n        </div>\r\n    );\r\n};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(Input, 'email', 'Email', [required])}\r\n            {createField(Input, 'password', 'Password', [required], { type: 'password' })}\r\n            {createField(Input, 'rememberMe', null, [], { type: 'checkbox' }, 'Remember me')}\r\n\r\n            {error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport LoginForm from './LoginForm';\r\nimport { login } from '../../redux/authReduser';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Navigate to='/profile' />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}