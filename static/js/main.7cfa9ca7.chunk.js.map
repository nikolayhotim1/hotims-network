{"version":3,"sources":["components/Navbar/Navbar.module.css","api/securityAPI.ts","api/authAPI.ts","redux/authReducer.ts","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","assets/images/hotims-network.jpg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.ts","redux/sidebarReducer.ts","redux/reduxStore.ts","App.jsx","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","api/profileAPI.ts","redux/profileReducer.ts","redux/dialogsReducer.ts","utils/helpers/objectHelper.ts","api/usersAPI.ts","redux/usersReducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","api/api.ts"],"names":["module","exports","securityAPI","instance","get","response","data","authAPI","email","password","rememberMe","captcha","post","delete","initialState","id","login","isAuth","isFetching","captchaURL","actions","type","payload","getAuthUserData","dispatch","a","resultCode","ResultCodesEnum","Success","ResultCodeForCaptchaEnum","CaptchaIsRequired","getCaptchaURL","message","messages","length","stopSubmit","_error","url","logout","authReduser","state","action","Navbar","className","style","navbar","navItem","isActive","active","to","News","news_wrapper","Music","musik_wrapper","Settings","settings_wrapper","Header","props","header","src","hotimsNetwork","alt","login_block","onClick","HeaderContainer","this","React","Component","connect","auth","initialized","appReduser","sidebarReduser","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","sidebarReducer","usersPage","usersReducer","authReducer","form","formReducer","app","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileContainer","lazy","DialogsContainer","UsersConatainer","Login","App","catchAllUnhandledErrors","reason","promise","console","log","initializeApp","addEventListener","removeEventListener","fallback","Preloader","path","element","pageTitle","AppContainer","Promise","all","then","MainApp","ReactDOM","render","document","getElementById","preloader","profileAPI","userId","status","put","file","formData","FormData","append","headers","profile","posts","likesCount","addPost","newPostText","deletePost","postId","setUserProfile","setUserStatus","savePhotoSuccess","photos","getUserProfile","getUserStatus","getUpdateStatus","savePhoto","saveProfile","getState","Error","reject","filter","p","dialogs","name","sendMessageActionCreator","newMessageText","dialogsReduser","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","usersAPI","getUsers","currentPage","pageSize","getNewFollowedUser","getNewUnfollowedUser","users","totalUsersCount","followingInProgress","_followUnfollowFlow","apiMethod","actionCreator","requestUsers","page","totalCount","follow","bind","unfollow","followed","axios","create","withCredentials","baseURL"],"mappings":"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","file":"static/js/main.7cfa9ca7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1Xf1_\",\"a\":\"Navbar_a__1lxvB\",\"active\":\"Navbar_active__Gzitz\"};","import { instance } from './api'\r\n\r\ntype GetCaptchaURLResponseType = {\r\n\turl: string\r\n}\r\nexport const securityAPI = {\r\n\tasync getCaptchaURL() {\r\n\t\tconst response = await instance.get<GetCaptchaURLResponseType>(`security/get-captcha-url`)\r\n\t\treturn response.data\r\n\t}\r\n}\r\n","import { instance, APIResponseType, ResultCodeForCaptchaEnum, ResultCodesEnum } from './api'\r\n\r\ntype GetAuthUserResponseDataType = {\r\n\tid: number\r\n\temail: string\r\n\tlogin: string\r\n}\r\ntype LoginResponseDataType = {\r\n\tuserId: number\r\n}\r\nexport const authAPI = {\r\n\tasync getAuthUserData() {\r\n\t\tconst response = await instance.get<APIResponseType<GetAuthUserResponseDataType>>(`auth/me`)\r\n\t\treturn response.data\r\n\t},\r\n\tasync login(email: string | null, password: string | null, rememberMe = false, captcha: string | null = null) {\r\n\t\tconst response = await instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(\r\n\t\t\t`auth/login`,\r\n\t\t\t{\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t\trememberMe,\r\n\t\t\t\tcaptcha\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn response.data\r\n\t},\r\n\tasync logout() {\r\n\t\tconst response = await instance.delete(`auth/login`)\r\n\t\treturn response.data\r\n\t}\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from './reduxStore'\r\nimport { ResultCodesEnum, ResultCodeForCaptchaEnum } from './../api/api'\r\nimport { FormAction, stopSubmit } from 'redux-form'\r\nimport { securityAPI } from '../api/securityAPI'\r\nimport { authAPI } from '../api/authAPI'\r\n\r\nconst initialState = {\r\n\tid: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false,\r\n\tisFetching: false,\r\n\tcaptchaURL: null as string | null\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport const actions = {\r\n\tsetAuthUserData: (id: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n\t\t({ type: 'hotims-network/authReduser/SET_AUTH_USER_DATA', payload: { id, email, login, isAuth } } as const),\r\n\tgetCaptchaURLSuccess: (captchaURL: string) =>\r\n\t\t({ type: 'hotims-network/authReduser/GET_CAPTCHA_URL_SUCCESS', payload: { captchaURL } } as const)\r\n}\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nconst authReduser = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'hotims-network/authReduser/GET_CAPTCHA_URL_SUCCESS':\r\n\t\tcase 'hotims-network/authReduser/SET_AUTH_USER_DATA': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\r\nexport const getAuthUserData = (): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await authAPI.getAuthUserData()\r\n\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\tconst { id, email, login } = data.data\r\n\t\t\tdispatch(actions.setAuthUserData(id, email, login, true))\r\n\t\t}\r\n\t}\r\n}\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await authAPI.login(email, password, rememberMe, captcha)\r\n\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\tdispatch(getAuthUserData())\r\n\t\t} else {\r\n\t\t\tif (data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n\t\t\t\tdispatch(getCaptchaURL())\r\n\t\t\t}\r\n\t\t\tconst message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n\t\t\tdispatch(stopSubmit('login', { _error: message }))\r\n\t\t}\r\n\t}\r\n}\r\nexport const getCaptchaURL = (): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await securityAPI.getCaptchaURL()\r\n\t\tconst captchaURL = data.url\r\n\t\tdispatch(actions.getCaptchaURLSuccess(captchaURL))\r\n\t}\r\n}\r\nexport const logout = (): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await authAPI.logout()\r\n\t\tif (data.resultCode === 0) {\r\n\t\t\tdispatch(actions.setAuthUserData(null, null, null, false))\r\n\t\t}\r\n\t}\r\n}\r\nexport default authReduser\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/users'>Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/news'>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={navItem => navItem.isActive ? style.active : style.a} to='/settings'>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={style.news_wrapper}>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={style.musik_wrapper}>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={style.settings_wrapper}>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/hotims-network.a9103588.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\nimport hotimsNetwork from './../../assets/images/hotims-network.jpg';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img\r\n                src={hotimsNetwork}\r\n                alt='Hotims Network'\r\n            />\r\n            <div className={style.login_block}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        {props.login} <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import { InferActionsTypes } from './reduxStore'\r\nimport { getAuthUserData } from './authReducer'\r\n\r\nconst initialState = {\r\n\tinitialized: false\r\n}\r\ntype InitialStateType = typeof initialState\r\nconst actions = {\r\n\tinitializedSuccess: () => ({ type: 'hotims-network/appReduser/INITIALIZED_SUCCESS' } as const)\r\n}\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nconst appReduser = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'hotims-network/appReduser/INITIALIZED_SUCCESS': {\r\n\t\t\treturn { ...state, initialized: true }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport const initializeApp = () => {\r\n\treturn (dispatch: any) => {\r\n\t\tconst promise = dispatch(getAuthUserData())\r\n\t\tPromise.all([promise]).then(() => {\r\n\t\t\tdispatch(actions.initializedSuccess())\r\n\t\t})\r\n\t}\r\n}\r\nexport default appReduser\r\n","const initialState = {}\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReduser = (state = initialState): InitialStateType => {\r\n\treturn state\r\n}\r\nexport default sidebarReduser\r\n","import { Action, applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport authReducer from './authReducer'\r\nimport dialogsReducer from './dialogsReducer'\r\nimport profileReducer from './profileReducer'\r\nimport sidebarReducer from './sidebarReducer'\r\nimport usersReducer from './usersReducer'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './appReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tsidebar: sidebarReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer\r\n})\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppSateType, unknown, A>\r\ntype RootReducerType = typeof rootReducer\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\nexport type AppSateType = ReturnType<RootReducerType>\r\nexport default store\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Route, Routes, Navigate } from 'react-router';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/reduxStore';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersConatainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        console.log(`Some error occured: ${reason}, ${promise}`);\r\n    };\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<Preloader />}>\r\n                        <Routes>\r\n                            <Route path='/profile' element={<ProfileContainer />}>\r\n                                <Route path='/profile/:userId' element={<ProfileContainer />} />\r\n                            </Route>\r\n                            <Route path='/dialogs' element={<DialogsContainer />} />\r\n                            <Route path='/users' element={<UsersConatainer pageTitle={'Samurai'} />} />\r\n                            <Route path='/login' element={<Login />} />\r\n                            <Route path='/news' element={<News />} />\r\n                            <Route path='/music' element={<Music />} />\r\n                            <Route path='/settings' element={<Settings />} />\r\n                            <Route path='/' element={<Navigate to='/profile' />} />\r\n                            <Route path='/*' element={<div>404 NOT FOUND</div>} />\r\n                        </Routes>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialized: state.app.initialized });\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\nconst MainApp = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));","export default __webpack_public_path__ + \"static/media/preloader.86e365cf.svg\";","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt='Preloader' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ekwU\",\"login_block\":\"Header_login_block__3xb1L\"};","import { PhotosType } from './../types/types'\r\nimport { ProfileType } from '../types/types'\r\nimport { instance, APIResponseType } from './api'\r\n\r\ntype SavePhotoResponseDataType = {\r\n\tphotos: PhotosType\r\n}\r\nexport const profileAPI = {\r\n\tasync getUserProfile(userId: number) {\r\n\t\tconst response = await instance.get<ProfileType>(`profile/${userId}`)\r\n\t\treturn response.data\r\n\t},\r\n\tasync getUserStatus(userId: number) {\r\n\t\tconst response = await instance.get<string>(`profile/status/${userId}`)\r\n\t\treturn response.data\r\n\t},\r\n\tasync getUpdateStatus(status: string) {\r\n\t\tconst response = await instance.put<APIResponseType>(`profile/status`, {\r\n\t\t\tstatus: status\r\n\t\t})\r\n\t\treturn response.data\r\n\t},\r\n\tasync savePhoto(file: File) {\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('image', file)\r\n\t\tconst response = await instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn response.data\r\n\t},\r\n\tasync saveProfile(profile: ProfileType) {\r\n\t\tconst response = await instance.put<APIResponseType>(`profile`, profile)\r\n\t\treturn response.data\r\n\t}\r\n}\r\n","import { BaseThunkType, InferActionsTypes } from './reduxStore'\r\nimport { PhotosType, PostType, ProfileType } from '../types/types'\r\nimport { FormAction, stopSubmit } from 'redux-form'\r\nimport { profileAPI } from '../api/profileAPI'\r\n\r\nconst initialState = {\r\n\tposts: [\r\n\t\t{ id: 1, message: \"It's my first post.\", likesCount: 15 },\r\n\t\t{ id: 2, message: 'Forza Juve!', likesCount: 30 }\r\n\t] as Array<PostType>,\r\n\tprofile: null as ProfileType | null,\r\n\tstatus: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport const actions = {\r\n\taddPost: (newPostText: string) => ({ type: 'hotims-network/profileReducer/ADD-POST', newPostText } as const),\r\n\tdeletePost: (postId: number) => ({ type: 'hotims-network/profileReducer/DELETE_POST', postId } as const),\r\n\tsetUserProfile: (profile: ProfileType) => ({ type: 'hotims-network/profileReducer/SET_USER_PROFILE', profile } as const),\r\n\tsetUserStatus: (status: string) => ({ type: 'hotims-network/profileReducer/SET_USER_STATUS', status } as const),\r\n\tsavePhotoSuccess: (photos: PhotosType) => ({ type: 'hotims-network/profileReducer/SAVE_PHOTO_SUCCESS', photos } as const)\r\n}\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'hotims-network/profileReducer/ADD-POST': {\r\n\t\t\treturn { ...state, posts: [...state.posts, { id: 3, message: action.newPostText, likesCount: 0 }] }\r\n\t\t}\r\n\t\tcase 'hotims-network/profileReducer/DELETE_POST': {\r\n\t\t\treturn { ...state, posts: state.posts.filter((p) => p.id !== action.postId) }\r\n\t\t}\r\n\t\tcase 'hotims-network/profileReducer/SET_USER_PROFILE': {\r\n\t\t\treturn { ...state, profile: action.profile }\r\n\t\t}\r\n\t\tcase 'hotims-network/profileReducer/SET_USER_STATUS': {\r\n\t\t\treturn { ...state, status: action.status }\r\n\t\t}\r\n\t\tcase 'hotims-network/profileReducer/SAVE_PHOTO_SUCCESS': {\r\n\t\t\treturn { ...state, profile: { ...state.profile, photos: action.photos } as ProfileType }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\r\nexport const getUserProfile = (userId: number): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await profileAPI.getUserProfile(userId)\r\n\t\tdispatch(actions.setUserProfile(data))\r\n\t}\r\n}\r\nexport const getUserStatus = (userId: number): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await profileAPI.getUserStatus(userId)\r\n\t\tdispatch(actions.setUserStatus(data))\r\n\t}\r\n}\r\nexport const getUpdateStatus = (status: string): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst data = await profileAPI.getUpdateStatus(status)\r\n\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\tdispatch(actions.setUserStatus(status))\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.log(error.message)\r\n\t\t}\r\n\t}\r\n}\r\nexport const savePhoto = (file: File): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst data = await profileAPI.savePhoto(file)\r\n\t\tif (data.resultCode === 0) {\r\n\t\t\tdispatch(actions.savePhotoSuccess(data.data.photos))\r\n\t\t}\r\n\t}\r\n}\r\nexport const saveProfile = (profile: ProfileType): ThunkType => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst userId = getState().auth.id\r\n\t\tconst data = await profileAPI.saveProfile(profile)\r\n\t\tif (data.resultCode === 0) {\r\n\t\t\tif (userId !== null) {\r\n\t\t\t\tdispatch(getUserProfile(userId))\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"userId can't be null\")\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdispatch(stopSubmit('editProfile', { _error: data.messages[0] }))\r\n\t\t\treturn Promise.reject(data.messages[0])\r\n\t\t}\r\n\t}\r\n}\r\nexport default profileReducer\r\n","import { DialogType, MessageType } from './../types/types'\r\nimport { InferActionsTypes } from './reduxStore'\r\n\r\nconst initialState = {\r\n\tdialogs: [\r\n\t\t{ id: 1, name: 'Andrey' },\r\n\t\t{ id: 2, name: 'Denis' },\r\n\t\t{ id: 3, name: 'Katya' }\r\n\t] as Array<DialogType>,\r\n\tmessages: [\r\n\t\t{ id: 1, message: 'Hi!' },\r\n\t\t{ id: 2, message: 'How are you?' },\r\n\t\t{ id: 3, message: 'Yo!' }\r\n\t] as Array<MessageType>\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport const actions = {\r\n\tsendMessageActionCreator: (newMessageText: string) =>\r\n\t\t({\r\n\t\t\ttype: 'hotims-network/dialogsReduser/SEND-MESSAGE',\r\n\t\t\tnewMessageText\r\n\t\t} as const)\r\n}\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nconst dialogsReduser = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'hotims-network/dialogsReduser/SEND-MESSAGE': {\r\n\t\t\treturn { ...state, messages: [...state.messages, { id: 4, message: action.newMessageText }] }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default dialogsReduser\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n\treturn items.map((u: any) => {\r\n\t\tif (u[objPropName] === itemId) {\r\n\t\t\treturn { ...u, ...newObjProps }\r\n\t\t}\r\n\t\treturn u\r\n\t})\r\n}\r\n","import { instance, GetItemsType, APIResponseType } from './api'\r\n\r\nexport const usersAPI = {\r\n\tasync getUsers(currentPage: number, pageSize: number) {\r\n\t\tconst response = await instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\treturn response.data\r\n\t},\r\n\tasync getNewFollowedUser(userId: number) {\r\n\t\tconst response = await instance.post<APIResponseType>(`follow/${userId}`, {})\r\n\t\treturn response.data\r\n\t},\r\n\tasync getNewUnfollowedUser(userId: number) {\r\n\t\tconst response = await instance.delete(`follow/${userId}`)\r\n\t\treturn response.data as Promise<APIResponseType>\r\n\t}\r\n}\r\n","import { BaseThunkType, InferActionsTypes } from './reduxStore'\r\nimport { UserType } from '../types/types'\r\nimport { updateObjectInArray } from '../utils/helpers/objectHelper'\r\nimport { Dispatch } from 'redux'\r\nimport { usersAPI } from '../api/usersAPI'\r\n\r\nconst initialState = {\r\n\tusers: [] as Array<UserType>,\r\n\tpageSize: 10,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tfollowingInProgress: [] as Array<number>\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport const actions = {\r\n\tfollowSuccess: (userId: number) => ({ type: 'FOLLOW', userId } as const),\r\n\tunfollowSuccess: (userId: number) => ({ type: 'UNFOLLOW', userId } as const),\r\n\tsetUsers: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\r\n\tsetCurrentPage: (currentPage: number) => ({ type: 'SET_CURRENT_PAGE', currentPage } as const),\r\n\tsetTotalUsersCount: (totalUsersCount: number) => ({ type: 'SET_TOTAL_USERS_COUNT', totalUsersCount } as const),\r\n\ttoggleIsFetching: (isFetching: boolean) => ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const),\r\n\ttoggleIsFollowingProgress: (isFetching: boolean, userId: number) =>\r\n\t\t({ type: 'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const)\r\n}\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FOLLOW': {\r\n\t\t\treturn { ...state, users: updateObjectInArray(state.users, action.userId, 'id', { followed: true }) }\r\n\t\t}\r\n\t\tcase 'UNFOLLOW': {\r\n\t\t\treturn { ...state, users: updateObjectInArray(state.users, action.userId, 'id', { followed: false }) }\r\n\t\t}\r\n\t\tcase 'SET_USERS': {\r\n\t\t\treturn { ...state, users: action.users }\r\n\t\t}\r\n\t\tcase 'SET_CURRENT_PAGE': {\r\n\t\t\treturn { ...state, currentPage: action.currentPage }\r\n\t\t}\r\n\t\tcase 'SET_TOTAL_USERS_COUNT': {\r\n\t\t\treturn { ...state, totalUsersCount: action.totalUsersCount }\r\n\t\t}\r\n\t\tcase 'TOGGLE_IS_FETCHING': {\r\n\t\t\treturn { ...state, isFetching: action.isFetching }\r\n\t\t}\r\n\t\tcase 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\r\n\t\t\t\t\t: state.followingInProgress.filter((id) => id !== action.userId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nconst _followUnfollowFlow = async (\r\n\tdispatch: Dispatch<ActionsTypes>,\r\n\tuserId: number,\r\n\tapiMethod: any,\r\n\tactionCreator: (userId: number) => ActionsTypes\r\n) => {\r\n\tdispatch(actions.toggleIsFollowingProgress(true, userId))\r\n\tconst data = await apiMethod(userId)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(userId))\r\n\t}\r\n\tdispatch(actions.toggleIsFollowingProgress(false, userId))\r\n}\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(actions.toggleIsFetching(true))\r\n\t\tdispatch(actions.setCurrentPage(page))\r\n\t\tconst data = await usersAPI.getUsers(page, pageSize)\r\n\t\tdispatch(actions.toggleIsFetching(false))\r\n\t\tdispatch(actions.setUsers(data.items))\r\n\t\tdispatch(actions.setTotalUsersCount(data.totalCount))\r\n\t}\r\n}\r\nexport const follow = (userId: number): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\t_followUnfollowFlow(dispatch, userId, usersAPI.getNewFollowedUser.bind(userId), actions.followSuccess)\r\n\t}\r\n}\r\nexport const unfollow = (userId: number): ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\t_followUnfollowFlow(dispatch, userId, usersAPI.getNewUnfollowedUser.bind(userId), actions.unfollowSuccess)\r\n\t}\r\n}\r\nexport default usersReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news_wrapper\":\"News_news_wrapper__2CVF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musik_wrapper\":\"Music_musik_wrapper__Xz0qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_wrapper\":\"Settings_settings_wrapper__3AP6z\"};","import { UserType } from './../types/types'\r\nimport axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': '7d7c0cc8-9365-47ef-8d77-ea42e5daa598'\r\n\t}\r\n})\r\nexport enum ResultCodesEnum {\r\n\tSuccess = 0,\r\n\tError = 1\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n\tCaptchaIsRequired = 10\r\n}\r\nexport type GetItemsType = {\r\n\titems: Array<UserType>\r\n\ttotalCount: number\r\n\terror: string | null\r\n}\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n\tdata: D\r\n\tresultCode: RC\r\n\tmessages: Array<string>\r\n}\r\n"],"sourceRoot":""}