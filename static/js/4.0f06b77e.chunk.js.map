{"version":3,"sources":["components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","redux/usersSelectors.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"names":["module","exports","getUsers","createSelector","state","usersPage","users","filter","u","getPageSize","pageSize","getCurrentPage","currentPage","getUsersFilter","getTotalUsersCount","totalUsersCount","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","className","style","paginator","type","onClick","p","map","cn","selectedPage","pageNumber","User","memo","user","follow","unfollow","to","id","src","photos","small","userPhoto","alt","user_photo","followed","disabled","some","name","status","UsersSearchForm","onFilterChanged","useSelector","enableReinitialize","initialValues","term","friend","String","onSubmit","values","setSubmitting","isSubmitting","as","value","Users","dispatch","useDispatch","navigate","useNavigate","location","useLocation","followUser","userId","unfollowUser","useEffect","parsed","queryString","search","substring","actualPage","actualFilter","page","Number","requestUsers","query","pathname","users_wrapper","UsersPage","pageTitle","title","Preloader"],"mappings":"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","file":"static/js/4.0f06b77e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_photo\":\"Users_user_photo__1UNKm\",\"users_wrapper\":\"Users_users_wrapper__36uex\",\"user\":\"Users_user__1MBBk\",\"title\":\"Users_title__bybcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__ootZt\",\"pageNumber\":\"Paginator_pageNumber__YyK91\",\"selectedPage\":\"Paginator_selectedPage__13AUn\"};","import { AppStateType } from './reduxStore'\r\nimport { createSelector } from 'reselect'\r\nconst getUsersSelector = (state: AppStateType) => {\r\n\treturn state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, users => {\r\n\treturn users.filter(u => true)\r\n})\r\nexport const getPageSize = (state: AppStateType) => {\r\n\treturn state.usersPage.pageSize\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n\treturn state.usersPage.currentPage\r\n}\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n\treturn state.usersPage.filter\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n\treturn state.usersPage.totalUsersCount\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n\treturn state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n\treturn state.usersPage.followingInProgress\r\n}\r\n","import { FC, useState } from 'react'\r\nimport style from './Paginator.module.css'\r\nimport cn from 'classnames'\r\ntype PropsType = {\r\n\ttotalItemsCount: number\r\n\tpageSize: number\r\n\tcurrentPage?: number\r\n\tportionSize?: number\r\n\tonPageChanged?: (pageNumber: number) => void\r\n}\r\nconst Paginator: FC<PropsType> = ({ totalItemsCount, pageSize, currentPage = 1, onPageChanged = () => {}, portionSize = 20 }) => {\r\n\tconst pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\tconst pages: Array<number> = []\r\n\tconst portionCount = Math.ceil(pagesCount / portionSize)\r\n\tconst [portionNumber, setPortionNumber] = useState(1)\r\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n\tconst rightPortionPageNumber = portionNumber * portionSize\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\treturn (\r\n\t\t<div className={style.paginator}>\r\n\t\t\t{portionNumber > 1 && (\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPortionNumber(portionNumber - 1)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tPREV\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{pages\r\n\t\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t.map(p => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={cn({ [style.selectedPage]: currentPage === p }, style.pageNumber)}\r\n\t\t\t\t\t\t\tkey={p}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonPageChanged(p)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{p}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t{portionCount > portionNumber && (\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPortionNumber(portionNumber + 1)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tNEXT\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Paginator\r\n","import style from './Users.module.css'\r\nimport userPhoto from '../../assets/images/computer-user-icon.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../types/types'\r\nimport { FC, memo } from 'react'\r\ntype PropsType = {\r\n\tuser: UserType\r\n\tfollowingInProgress: Array<number>\r\n\tfollow: (userId: number) => void\r\n\tunfollow: (userId: number) => void\r\n}\r\nexport const User: FC<PropsType> = memo(({ user, followingInProgress, follow, unfollow }) => {\r\n\treturn (\r\n\t\t<div className={style.user}>\r\n\t\t\t<span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavLink to={`/profile/${user.id}`}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={user.photos.small !== null ? user.photos.small : userPhoto}\r\n\t\t\t\t\t\t\talt='My super avatar'\r\n\t\t\t\t\t\t\tclassName={style.user_photo}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{user.followed ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tdisabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\tonClick={() => unfollow(user.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUnfollow\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tdisabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\tonClick={() => follow(user.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFollow\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t\t<div>{user.status}</div>\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n})\r\n","import { Field, Form, Formik } from 'formik'\r\nimport { FC, memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { FilterType } from '../../redux/usersReducer'\r\nimport { getUsersFilter } from '../../redux/usersSelectors'\r\ntype PropsType = {\r\n\tonFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = 'true' | 'false' | ''\r\ntype FormType = {\r\n\tterm: string\r\n\tfriend: FriendFormType\r\n}\r\ntype SetSubmittingType = {\r\n\tsetSubmitting: (isSubmitting: boolean) => void\r\n}\r\nexport const UsersSearchForm: FC<PropsType> = memo(({ onFilterChanged }) => {\r\n\tconst filter = useSelector(getUsersFilter)\r\n\tconst submit = (values: FormType, { setSubmitting }: SetSubmittingType) => {\r\n\t\tconst filter: FilterType = {\r\n\t\t\tterm: values.term,\r\n\t\t\tfriend: values.friend === 'true' ? true : values.friend === 'false' ? false : null\r\n\t\t}\r\n\t\tonFilterChanged(filter)\r\n\t\tsetSubmitting(false)\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType }}\r\n\t\t\t\tonSubmit={submit}\r\n\t\t\t>\r\n\t\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Field type='text' name='term' />\r\n\t\t\t\t\t\t<Field as='select' name='friend'>\r\n\t\t\t\t\t\t\t<option value='null'>All</option>\r\n\t\t\t\t\t\t\t<option value='true'>Followed</option>\r\n\t\t\t\t\t\t\t<option value='false'>Unfollowed</option>\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<button type='submit' disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tFind\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t)\r\n})\r\n","import style from './Users.module.css'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport { User } from './User'\r\nimport { FC, memo, useEffect } from 'react'\r\nimport { UsersSearchForm } from './UsersSearchForm'\r\nimport { FilterType, requestUsers, follow, unfollow } from '../../redux/usersReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n\tgetCurrentPage,\r\n\tgetFollowingInProgress,\r\n\tgetPageSize,\r\n\tgetTotalUsersCount,\r\n\tgetUsers,\r\n\tgetUsersFilter\r\n} from '../../redux/usersSelectors'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport * as queryString from 'querystring'\r\nexport const Users: FC = memo(() => {\r\n\tconst totalUsersCount = useSelector(getTotalUsersCount)\r\n\tconst currentPage = useSelector(getCurrentPage)\r\n\tconst pageSize = useSelector(getPageSize)\r\n\tconst users = useSelector(getUsers)\r\n\tconst filter = useSelector(getUsersFilter)\r\n\tconst followingInProgress = useSelector(getFollowingInProgress)\r\n\tconst dispatch = useDispatch()\r\n\tconst navigate = useNavigate()\r\n\tconst location = useLocation()\r\n\tconst onPageChanged = (pageNumber: number) => {\r\n\t\tdispatch(requestUsers(pageNumber, pageSize, filter))\r\n\t}\r\n\tconst onFilterChanged = (filter: FilterType) => {\r\n\t\tdispatch(requestUsers(1, pageSize, filter))\r\n\t}\r\n\tconst followUser = (userId: number) => {\r\n\t\tdispatch(follow(userId))\r\n\t}\r\n\tconst unfollowUser = (userId: number) => {\r\n\t\tdispatch(unfollow(userId))\r\n\t}\r\n\ttype QueryParamsType = {\r\n\t\tterm?: string\r\n\t\tpage?: string\r\n\t\tfriend?: string\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst parsed = queryString.parse(location.search.substring(1)) as QueryParamsType\r\n\t\tlet actualPage = currentPage\r\n\t\tlet actualFilter = filter\r\n\t\tif (!!parsed.page) actualPage = Number(parsed.page)\r\n\t\tif (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term as string }\r\n\t\tswitch (parsed.friend) {\r\n\t\t\tcase 'null':\r\n\t\t\t\tactualFilter = { ...actualFilter, friend: null }\r\n\t\t\t\tbreak\r\n\t\t\tcase 'true':\r\n\t\t\t\tactualFilter = { ...actualFilter, friend: true }\r\n\t\t\t\tbreak\r\n\t\t\tcase 'false':\r\n\t\t\t\tactualFilter = { ...actualFilter, friend: false }\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\tdispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\tuseEffect(() => {\r\n\t\tconst query: QueryParamsType = {}\r\n\t\tif (!!filter.term) query.term = filter.term\r\n\t\tif (filter.friend !== null) query.friend = String(filter.friend)\r\n\t\tif (currentPage !== 1) query.page = String(currentPage)\r\n\t\tnavigate({\r\n\t\t\tpathname: '/users',\r\n\t\t\tsearch: queryString.stringify(query)\r\n\t\t})\r\n\t}, [navigate, filter, currentPage])\r\n\treturn (\r\n\t\t<div className={style.users_wrapper}>\r\n\t\t\t<UsersSearchForm onFilterChanged={onFilterChanged} />\r\n\t\t\t<Paginator\r\n\t\t\t\ttotalItemsCount={totalUsersCount}\r\n\t\t\t\tpageSize={pageSize}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\tonPageChanged={onPageChanged}\r\n\t\t\t/>\r\n\t\t\t{users.map(u => (\r\n\t\t\t\t<User key={u.id} user={u} followingInProgress={followingInProgress} follow={followUser} unfollow={unfollowUser} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n})\r\n","import style from './Users.module.css'\r\nimport { useSelector } from 'react-redux'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { getIsFetching } from '../../redux/usersSelectors'\r\nimport { FC, memo } from 'react'\r\nimport { Users } from './Users'\r\ntype UserPagePropsType = {\r\n\tpageTitle: string\r\n}\r\nexport const UsersPage: FC<UserPagePropsType> = memo(({ pageTitle }) => {\r\n\tconst isFetching = useSelector(getIsFetching)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1 className={style.title}>{pageTitle}</h1>\r\n\t\t\t{isFetching ? <Preloader /> : null}\r\n\t\t\t<Users />\r\n\t\t</>\r\n\t)\r\n})\r\n"],"sourceRoot":""}